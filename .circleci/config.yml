version: 2
jobs:
  build:
    machine: true
    environment:
      CHANGE_MINIKUBE_NONE_USER: true
    working_directory: ~/core-document-synchronization
    steps:
      - checkout
      - run:
          name: Install Kubectl
          command: curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.3/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - run:
          name: Install Minikube
          command: curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          name: Start Minikube
          command: |
            sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
            sudo minikube update-context
            sleep 5 # Let the minikube have some time to start up
      - run:
          name: Set up permissions for docs storage folder
          command: |
            sudo mkdir -p /data/docs
            sudo chmod o+rw /data/docs
      - run:
          name: Accept EULA
          command: grep -rl AcceptEULA ./example | xargs sed -i 's/AcceptEULA=no/AcceptEULA=yes/g'
      - run:
          name: Deploy services
          command: |
            # Deploy charts
            sudo kubectl create -v=8 -f example
            # Give the deployment some seconds to be created
            sleep 5
            # Wait for rollout to finish
            sudo kubectl rollout status deployment/engine
            sudo kubectl rollout status deployment/engine2
      - run:
          name: Build and execute example scenario
          command: |
            ENGINE1_URL=$(sudo minikube service engine --url)
            ENGINE2_URL=$(sudo minikube service engine2 --url)

            cd test
            docker build --build-arg ENGINE1="$ENGINE1_URL" --build-arg ENGINE2="$ENGINE2_URL" -t test/test-example .
            docker run --rm test/test-example
