version: 2
jobs:
  build:
    machine: true
    environment:
      CHANGE_MINIKUBE_NONE_USER: true
    working_directory: ~/example-doc-sync
    steps:
      - checkout
      - run:
          name: Login to Docker
          command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
      - run:
          name: Install Kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - run:
          name: Install Minikube
          command: |
            curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          name: Start Minikube
          command: |
            sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
            sudo minikube update-context
      - run:
          name: Add docker credentials as kubernetes secret
          command: |
            sleep 5 # Let the minikube have some time to start up
            sudo kubectl create secret docker-registry dockerhub --docker-username=$DOCKER_USER --docker-password=$DOCKER_PASSWORD --docker-email=$DOCKER_EMAIL
      - run:
          name: Set up permissions for docs storage folder
          command: |
            sudo mkdir -p /data/docs
            sudo chmod o+rw /data/docs
      - run:
          name: Deploy services
          command: sudo kubectl create -f ./core
      - run:
          name: Wait for services to be ready
          command: |
            RABBITMQ_URL=$(sudo minikube service rabbitmq --url)
            MIRA_URL=$(sudo minikube service mira --url)

            set +e

            # Check that Mira returns correct number of qix engines
            RETRIES=0
            EXPECTED_NBR_ENGINES=2
            while (( NBR_ENGINES != "$EXPECTED_NBR_ENGINES" && RETRIES != 60 )); do
              NBR_ENGINES=$(curl "$MIRA_URL/v1/engines" | grep -o \"metricsPort\" | wc -w)
              echo "Mira returned $NBR_ENGINES qix engines"
              sleep 2
              RETRIES=$((RETRIES + 1 ))
            done

            if [ "$NBR_ENGINES" != "$EXPECTED_NBR_ENGINES" ]; then
              echo "Found $NBR_ENGINES QIX Engines but expected $EXPECTED_NBR_ENGINES"
              exit 1
            fi
      - run:
          name: Build and execute example scenario
          command: |
            # Build and execute example test
            cd test
            ENGINE_URL=$(sudo minikube service engine --url)
            ENGINE2_URL=$(sudo minikube service engine2 --url)
            docker build --build-arg ENGINE1="$ENGINE_URL" --build-arg ENGINE2="$ENGINE2_URL" -t test/test-example .
            docker run --rm test/test-example
